{"version":3,"sources":["webpack:///./src/app/pages/sign-in/sign-in.component.html","webpack:///./src/app/pages/sign-in/sign-in.component.scss","webpack:///./src/app/pages/sign-in/sign-in.component.ts","webpack:///./src/app/pages/sign-in/sign-in.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,mnN;;;;;;;;;;;ACAA,yBAAyB,wBAAwB,sBAAsB,qBAAqB,GAAG,6CAA6C,2pB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1F;AACT;AAC2B;AACpB;AACqC;AAOrF,IAAa,eAAe,GAA5B,MAAa,eAAe;IAI1B,YAAmB,WAAwB,EAAS,MAAa,EAAS,QAAqB;QAA5E,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QAAS,aAAQ,GAAR,QAAQ,CAAa;IAAI,CAAC;IAEpG,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,0EAAc,CAAC,CAAC,CAAC;YACxE,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACrF,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChF,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,0EAAc,CAAC,CAAC,CAAC;YACxE,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,iBAAiB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC7C,EAAC,EAAC,SAAS,EAAE,qFAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAAC,CAAC,CAAC;IAEnE,CAAC;IAEM,iBAAiB,CAAC,MAAa;QACpC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC7B;IACH,CAAC;IAEM,oBAAoB,CAAC,MAAa;QACvC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,gBAAgB,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;SAC7H;IACH,CAAC;CAEF;AAjCY,eAAe;IAL3B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,6JAAuC;;KAExC,CAAC;qCAKgC,0DAAW,EAAgB,sDAAM,EAAmB,6DAAW;GAJpF,eAAe,CAiC3B;AAjC2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AACM;AACA;AACM;AACK;AACJ;AAE/C,MAAM,MAAM,GAAG;IACpB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAe,EAAE,SAAS,EAAE,MAAM,EAAE;CAC5D,CAAC;AAaF,IAAa,YAAY,GAAzB,MAAa,YAAY;CAAI;AAAhB,YAAY;IAXxB,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,kEAAmB;YACnB,kEAAY;SACb;QACD,YAAY,EAAE;YACZ,kEAAe;SAChB;KACF,CAAC;GACW,YAAY,CAAI;AAAJ","file":"pages-sign-in-sign-in-module-es2015.js","sourcesContent":["module.exports = \"<mat-card>\\r\\n    <div fxLayout=\\\"row wrap\\\">\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-2\\\">\\r\\n            <h2 class=\\\"text-muted text-center\\\">Sign In</h2>\\r\\n            <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLoginFormSubmit(loginForm.value)\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n                    <mat-label>Email</mat-label>\\r\\n                    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                    <mat-error *ngIf=\\\"loginForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"loginForm.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n                    <mat-label>Password</mat-label>\\r\\n                    <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required>\\r\\n                    <mat-error *ngIf=\\\"loginForm.controls.password.errors?.required\\\">Password is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"loginForm.controls.password.hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n                </mat-form-field> \\r\\n                <div class=\\\"text-center mt-2\\\">\\r\\n                    <button mat-fab color=\\\"primary\\\" class=\\\"mat-elevation-z6\\\" (click)=\\\"onLoginFormSubmit(loginForm.value)\\\">\\r\\n                        <mat-icon>exit_to_app</mat-icon>\\r\\n                    </button>\\r\\n                </div> \\r\\n\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"mt-3\\\">\\r\\n                    <div class=\\\"divider w-100\\\"></div>\\r\\n                    <h3 class=\\\"text-muted auth\\\">or Sign in with one click</h3>\\r\\n                    <div class=\\\"divider w-100\\\"></div>\\r\\n                </div>               \\r\\n                \\r\\n                <div class=\\\"text-center py-2\\\">                   \\r\\n                    <svg class=\\\"social-icon\\\" viewBox=\\\"0 0 24 24\\\" matTooltip=\\\"Facebook\\\">\\r\\n                        <path d=\\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M18,5H15.5A3.5,3.5 0 0,0 12,8.5V11H10V14H12V21H15V14H18V11H15V9A1,1 0 0,1 16,8H18V5Z\\\" />\\r\\n                    </svg>\\r\\n                    <svg class=\\\"social-icon\\\" viewBox=\\\"0 0 24 24\\\" matTooltip=\\\"Twitter\\\">\\r\\n                        <path d=\\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M17.71,9.33C18.19,8.93 18.75,8.45 19,7.92C18.59,8.13 18.1,8.26 17.56,8.33C18.06,7.97 18.47,7.5 18.68,6.86C18.16,7.14 17.63,7.38 16.97,7.5C15.42,5.63 11.71,7.15 12.37,9.95C9.76,9.79 8.17,8.61 6.85,7.16C6.1,8.38 6.75,10.23 7.64,10.74C7.18,10.71 6.83,10.57 6.5,10.41C6.54,11.95 7.39,12.69 8.58,13.09C8.22,13.16 7.82,13.18 7.44,13.12C7.81,14.19 8.58,14.86 9.9,15C9,15.76 7.34,16.29 6,16.08C7.15,16.81 8.46,17.39 10.28,17.31C14.69,17.11 17.64,13.95 17.71,9.33Z\\\" />\\r\\n                    </svg>\\r\\n                    <svg class=\\\"social-icon\\\" viewBox=\\\"0 0 24 24\\\" matTooltip=\\\"Google\\\">\\r\\n                        <path d=\\\"M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3M19.5,12H18V10.5H17V12H15.5V13H17V14.5H18V13H19.5V12M9.65,11.36V12.9H12.22C12.09,13.54 11.45,14.83 9.65,14.83C8.11,14.83 6.89,13.54 6.89,12C6.89,10.46 8.11,9.17 9.65,9.17C10.55,9.17 11.13,9.56 11.45,9.88L12.67,8.72C11.9,7.95 10.87,7.5 9.65,7.5C7.14,7.5 5.15,9.5 5.15,12C5.15,14.5 7.14,16.5 9.65,16.5C12.22,16.5 13.96,14.7 13.96,12.13C13.96,11.81 13.96,11.61 13.89,11.36H9.65Z\\\" />\\r\\n                    </svg>\\r\\n                </div> \\r\\n\\r\\n            </form>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"p-2\\\" ngClass.sm=\\\"mt-2\\\" ngClass.xs=\\\"mt-2\\\">\\r\\n            <h2 class=\\\"text-muted text-center\\\">Don't have an account? Sign up now!</h2>\\r\\n            <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onRegisterFormSubmit(registerForm.value)\\\">\\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-2\\\">\\r\\n                    <mat-label>Full Name</mat-label>\\r\\n                    <input matInput placeholder=\\\"Full Name\\\" formControlName=\\\"name\\\" required>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.name.errors?.required\\\">Full Name is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.name.hasError('minlength')\\\">Full Name isn't long enough, minimum of 3 characters</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n                    <mat-label>Email</mat-label>\\r\\n                    <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\" required>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.email.errors?.required\\\">Email is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.email.hasError('invalidEmail')\\\">Invalid email address</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n                    <mat-label>Password</mat-label>\\r\\n                    <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" minlength=\\\"6\\\" required>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.password.errors?.required\\\">Password is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.password.hasError('minlength')\\\">Password isn't long enough, minimum of 6 characters</mat-error>\\r\\n                </mat-form-field> \\r\\n                <mat-form-field  appearance=\\\"outline\\\" class=\\\"w-100 mt-1\\\">\\r\\n                    <mat-label>Confirm Password</mat-label>\\r\\n                    <input matInput placeholder=\\\"Confirm Password\\\" formControlName=\\\"confirmPassword\\\" type=\\\"password\\\" required>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.confirmPassword.errors?.required\\\">Confirm Password is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"registerForm.controls.confirmPassword.hasError('mismatchedPasswords')\\\">Passwords do not match</mat-error>\\r\\n                </mat-form-field>\\r\\n                <div class=\\\"text-center mt-2\\\">\\r\\n                    <button mat-fab color=\\\"primary\\\" class=\\\"mat-elevation-z6\\\" (click)=\\\"onRegisterFormSubmit(registerForm.value)\\\">\\r\\n                        <mat-icon>person_add</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n    </div> \\r\\n</mat-card>\"","module.exports = \".auth {\\n  white-space: nowrap;\\n  padding: 7px 14px;\\n  font-weight: 500;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc2lnbi1pbi9EOlxcQ2Fwc3Rvbi1Qcm9qZWN0XFxlbXBvcml1bS9zcmNcXGFwcFxccGFnZXNcXHNpZ24taW5cXHNpZ24taW4uY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3NpZ24taW4vc2lnbi1pbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLG1CQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvc2lnbi1pbi9zaWduLWluLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmF1dGh7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgcGFkZGluZzogN3B4IDE0cHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwOyAgICBcclxufSIsIi5hdXRoIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgcGFkZGluZzogN3B4IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { emailValidator, matchingPasswords } from '../../theme/utils/app-validators';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.scss']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  registerForm: FormGroup;\r\n\r\n  constructor(public formBuilder: FormBuilder, public router:Router, public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      'email': ['', Validators.compose([Validators.required, emailValidator])],\r\n      'password': ['', Validators.compose([Validators.required, Validators.minLength(6)])] \r\n    });\r\n\r\n    this.registerForm = this.formBuilder.group({\r\n      'name': ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      'email': ['', Validators.compose([Validators.required, emailValidator])],\r\n      'password': ['', Validators.required],\r\n      'confirmPassword': ['', Validators.required]\r\n    },{validator: matchingPasswords('password', 'confirmPassword')});\r\n\r\n  }\r\n\r\n  public onLoginFormSubmit(values:Object):void {\r\n    if (this.loginForm.valid) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  public onRegisterFormSubmit(values:Object):void {\r\n    if (this.registerForm.valid) {\r\n      this.snackBar.open('You registered successfully!', '×', { panelClass: 'success', verticalPosition: 'top', duration: 3000 });\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { SignInComponent } from './sign-in.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: SignInComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    SignInComponent\r\n  ]\r\n})\r\nexport class SignInModule { }\r\n"],"sourceRoot":""}